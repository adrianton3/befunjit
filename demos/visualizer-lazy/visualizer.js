// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var grid, loadProgram, run, saveProgram, setupCompilers, setupEditors, setupRunButton, setupSamples, _ref;

  _ref = window.viz, setupEditors = _ref.setupEditors, setupSamples = _ref.setupSamples, setupCompilers = _ref.setupCompilers, setupRunButton = _ref.setupRunButton, saveProgram = _ref.saveProgram, loadProgram = _ref.loadProgram;

  grid = null;

  run = function(editors, compiler) {
    var lazyRuntime, playfield, stringedOutput, stringedStack;
    saveProgram(editors);
    playfield = new bef.Playfield();
    playfield.fromString(editors.source.getValue(), 16, 10);
    lazyRuntime = new bef.LazyRuntime();
    lazyRuntime.execute(playfield, {
      jumpLimit: 1000,
      compiler: compiler
    }, editors.input.getValue());
    stringedStack = lazyRuntime.programState.stack.join(' ');
    stringedOutput = lazyRuntime.programState.outRecord.join(' ');
    editors.output.setValue("Stack: " + stringedStack + "\nOutput: " + stringedOutput, 1);
    if (grid != null) {
      grid.destroy();
    }
    grid = new viz.Grid(playfield, lazyRuntime.pathSet, document.getElementById('can'));
    return grid.setListener(function(path) {
      var _ref1;
      return editors.js.setValue((_ref1 = path != null ? path.code : void 0) != null ? _ref1 : '');
    });
  };

  (function() {
    var compiler, editors;
    compiler = bef.BinaryCompiler;
    editors = setupEditors();
    setupSamples(window.befSample, editors);
    setupCompilers(function(_compiler) {
      compiler = _compiler;
      return run(editors, compiler);
    });
    setupRunButton(function() {
      return run(editors, compiler);
    });
    loadProgram(editors);
    return run(editors, compiler);
  })();

}).call(this);
