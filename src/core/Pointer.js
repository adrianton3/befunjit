// Generated by CoffeeScript 1.12.7
(function() {
  'use strict';
  var Pointer, S, dirTable;

  S = bef.Symbols;

  dirTable = new Map([
    [
      S.UP, {
        x: 0,
        y: -1
      }
    ], [
      S.LEFT, {
        x: -1,
        y: 0
      }
    ], [
      S.DOWN, {
        x: 0,
        y: 1
      }
    ], [
      S.RIGHT, {
        x: 1,
        y: 0
      }
    ]
  ]);

  Pointer = function(x, y, dir, space) {
    this.x = x;
    this.y = y;
    this.space = space;
    this._updateDir(dir);
  };

  Pointer.prototype.clone = function() {
    return new Pointer(this.x, this.y, this.dir, this.space);
  };

  Pointer.prototype._updateDir = function(dir) {
    var entry;
    this.dir = dir;
    entry = dirTable.get(dir);
    this.ax = entry.x;
    return this.ay = entry.y;
  };

  Pointer.prototype.turn = function(dir) {
    if ((dirTable.has(dir)) && (dir !== this.dir)) {
      this._updateDir(dir);
    }
    return this;
  };

  Pointer.prototype.advance = function() {
    this.x = (this.x + this.ax + this.space.width) % this.space.width;
    this.y = (this.y + this.ay + this.space.height) % this.space.height;
    return this;
  };

  Pointer.prototype.set = function(x, y, dir) {
    this.x = x;
    this.y = y;
    this._updateDir(dir);
    return this;
  };

  if (window.bef == null) {
    window.bef = {};
  }

  window.bef.Pointer = Pointer;

}).call(this);
